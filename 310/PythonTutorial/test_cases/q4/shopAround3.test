class: "EvalTest"
success: "shopAroundTown(order,fruitTown, price) selects the cheapest shop around"
failure: "shopAroundTown(order,fruitTown, price) must select the cheapest shop around"

# Python statements initializing variables for the test below.
preamble: """
import shop
import town

orders = [('apples', 1.0), ('oranges', 3.0), ('limes', 2.0)]
dir1 = {'apples': 2.0, 'oranges': 1.0}
dir2 = {'apples': 1.0, 'oranges': 5.0, 'limes': 3.0}
dir3 = {'apples': 2.0, 'limes': 2.0}
shop1 = shop.FruitShop('shop1', dir1)
shop2 = shop.FruitShop('shop2', dir2)
shop3 = shop.FruitShop('shop3', dir3)
shops = [shop1, shop2, shop3]
distances = {('home', 'shop1'): 2,
			 ('home', 'shop2'): 1,
			 ('home', 'shop3'): 1,
			 ('shop1', 'shop2'): 2.5,
			 ('shop1', 'shop3'): 2.5,
			 ('shop2', 'shop3'): 1
			 }
fruitTown = town.Town(shops, distances)
gasprice = 5
ans = shopAroundTown.shopAroundTown(orders, fruitTown, gasprice)
"""

# A python expression to be evaluated.  This expression must return the 
# same result for the student and instructor's code.
test: "ans"
